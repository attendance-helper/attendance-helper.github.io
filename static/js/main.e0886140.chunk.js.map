{"version":3,"sources":["names.js","App.js","reportWebVitals.js","index.js"],"names":["names","App","canvasRef","useRef","_useState","useState","pdf1","pdf2","pdf3","_useState2","_slicedToArray","pdfFiles","setPdfFiles","_useState3","_useState4","textNames","setNames","_useState5","_useState6","fileNames","setFileNames","_useState7","_useState8","pdfImages","setPdfImages","_useState9","_useState10","progText","setProgText","_useState11","_useState12","progNumer","setProgNumer","_useState13","_useState14","progDenom","setProgDenom","handleNameFileChange","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","file","text","wrap","_context","prev","next","target","files","sent","stop","_x","apply","arguments","handleFileChange","pdfNumber","selectedFile","prevPdfFiles","_objectSpread","_defineProperty","_loadPDFs","_callee2","pdfPaths","pdfNum","pdfPath","pdf","numPages","pdfPageImages","pageNum","page","viewport","canvas","context","renderContext","renderTask","imageData","mat","res","_context2","console","log","alert","abrupt","URL","createObjectURL","length","pdfjs","getDocument","promise","toString","getPage","getViewport","scale","document","createElement","getContext","width","height","canvasContext","render","getImageData","cv","Mat","CV_8UC4","data","set","processImage","push","processArray","arr","maxVal","maxInd","minVal","minInd","x","data32S","xval","src","gray","cvtColor","COLOR_RGBA2GRAY","blurred","ksize","Size","GaussianBlur","BORDER_DEFAULT","thresh","adaptiveThreshold","ADAPTIVE_THRESH_GAUSSIAN_C","THRESH_BINARY_INV","dst","zeros","rows","cols","CV_8UC3","lines","color","Scalar","HoughLinesP","Math","PI","i","startPoint","Point","endPoint","line","hierarchy","horizontal_kernel","getStructuringElement","MORPH_RECT","detected_horizontal","morphologyEx","MORPH_OPEN","contours_horizontal","MatVector","findContours","RETR_EXTERNAL","CHAIN_APPROX_SIMPLE","minIndex","minValue","maxIndex","maxValue","size","yval","get","_processArray","_processArray2","minBotInd","maxBotInd","_processArray3","_processArray4","minTopInd","maxTopInd","ctop","cbot","l","drawContours","destCoords","matFromArray","CV_32FC2","srcCoords","transformationMatrix","getPerspectiveTransform","deskewed","warpPerspective","delete","useEffect","title","GlobalWorkerOptions","workerSrc","progElem","_jsx","_jsxs","children","toppart","_Fragment","pdfpicker","nameinput","ref","id","onSubmit","preventDefault","n","split","finalim","k","person","name_regions","i1_regions","i2_regions","position","j","cellHeight","rect1","Rect","rect2","rect3","name_region","roi","i1_region","i2_region","roi1","copyTo","roi2","roi3","roi4","roi5","roi6","roi7","imshow","processNames","placeholder","value","onChange","type","accept","onClick","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","React","StrictMode"],"mappings":"8nBAsMeA,EAtMD,CACd,CACA,4BACA,qBACA,6BACA,aACA,kBACA,uBACA,qBACA,uBACA,yBACA,eACA,wBACA,wBACA,sBACA,wBACA,gBACA,mBACA,kBACA,oBACA,mBAEA,CACA,kBACA,6BACA,uBACA,gCACA,gBACA,mBACA,uBACA,qBACA,gBACA,iBACA,uBACA,sBACA,4BACA,aACA,gBACA,yBACA,gBACA,6BACA,kBACA,oCAEA,CACA,oCACA,4BACA,sBACA,sBACA,mBACA,aACA,yBACA,qBACA,eACA,sBACA,mBACA,uBACA,qBACA,eACA,cACA,uBACA,sBACA,uBACA,oBACA,qBAEA,CACA,sBACA,sBACA,iBACA,6BACA,kBACA,cACA,oBACA,gBACA,iBACA,sBACA,8BACA,mBACA,eACA,oBACA,iBACA,kBACA,qBACA,iBACA,oBACA,eAEA,CACA,qBACA,qBACA,yBACA,4BACA,gBACA,mBACA,WACA,eACA,yBACA,aACA,gBACA,gBACA,qBACA,cACA,gBACA,eACA,cACA,qBACA,uBACA,iBAEA,CACA,qBACA,6BACA,sBACA,eACA,YACA,oBACA,2BACA,kBACA,eACA,mBACA,eACA,wBACA,oBACA,yBACA,eACA,yBACA,cACA,4BACA,sBACA,eAEA,CACA,kBACA,uBACA,gCACA,gCACA,cACA,6BACA,wBACA,oBACA,kBACA,4BACA,uBACA,kBACA,4BACA,sBACA,iBACA,mBACA,qBACA,0BACA,uBACA,yBAEA,CACA,uBACA,wBACA,iBACA,6BACA,eACA,iBACA,sBACA,YACA,6BACA,aACA,uBACA,mBACA,oBACA,uBACA,2BACA,cACA,iBACA,mCACA,kCACA,6BAEA,CACA,kBACA,2BACA,mBACA,eACA,cACA,cACA,cACA,qBACA,wBACA,eACA,uBACA,gBACA,sBACA,gBACA,eACA,mBACA,uBACA,e,OCiQeC,MAvbf,WACE,IAAMC,EAAYC,iBAAO,MAEzBC,EAAgCC,mBAAS,CAAEC,KAAM,KAAMC,KAAM,KAAMC,KAAM,OAAOC,EAAAC,YAAAN,EAAA,GAAzEO,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAE5BI,EAA8BR,mBAAS,IAAGS,EAAAJ,YAAAG,EAAA,GAAnCE,EAASD,EAAA,GAAEE,EAAQF,EAAA,GAC1BG,EAAkCZ,mBAAS,IAAGa,EAAAR,YAAAO,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAE9BG,EAAkChB,mBAAS,IAAGiB,EAAAZ,YAAAW,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAE9BG,EAAgCpB,mBAAS,IAAGqB,EAAAhB,YAAAe,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,EAAkCxB,mBAAS,GAAEyB,EAAApB,YAAAmB,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAAkC5B,mBAAS,GAAE6B,EAAAxB,YAAAuB,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAMxBG,EAAoB,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOC,GAAK,IAAAC,EAAAC,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACJ,KAA7BL,EAAOD,EAAMO,OAAOC,MAAM,IACvB,CAADJ,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACaL,EAAKC,OAAO,KAAD,EAAxBA,EAAIE,EAAAK,KACVhC,EAAayB,GAAM,wBAAAE,EAAAM,OAAA,GAAAX,EAAA,KAEtB,gBANyBY,GAAA,OAAAhB,EAAAiB,MAAA,KAAAC,UAAA,KAcpBC,EAAmB,SAACd,EAAOe,GAC/B,IAAMC,EAAehB,EAAMO,OAAOC,MAAM,GACxCvC,GAAY,SAACgD,GAAY,OAAAC,wBAAA,GACpBD,GAAY,GAAAE,YAAA,GACdJ,EAAYC,GAAY,GAE7B,EAEuB,SAAAI,IAuEtB,OAvEsBA,EAAAxB,YAAAC,cAAAC,MAAvB,SAAAuB,IAAA,IAAAC,EAAA1C,EAAA2C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxC,cAAAM,MAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,OAIE,GAHAiC,QAAQC,IAAI,sBAKRxE,EAASL,MAAQK,EAASJ,MAAQI,EAASH,MAAI,CAAAyE,EAAAhC,KAAA,QAAAgC,EAAAhC,KAAA,eAEH,OAA5CmC,MAAM,sCAAsCH,EAAAI,OAAA,iBAI5CpB,EAAW,CACbqB,IAAIC,gBAAgB5E,EAASL,MAC7BgF,IAAIC,gBAAgB5E,EAASJ,MAC7B+E,IAAIC,gBAAgB5E,EAASH,OAG3Be,EAAY,GACP2C,EAAO,EAAE,KAAD,OAAEA,EAASD,EAASuB,QAAM,CAAAP,EAAAhC,KAAA,SACX,OAA1BkB,EAAUF,EAASC,GAAOe,EAAAhC,KAAA,GACZwC,IAAMC,YAAYvB,GAASwB,QAAQ,KAAD,GAA9CvB,EAAGa,EAAA7B,KACHiB,EAAWD,EAAIC,SACfC,EAAgB,GAEtB1C,EAAY,iBAAmBsC,EAAO,GAAG0B,WAAa,UACtDxD,EAAaiC,GAEJE,EAAU,EAAE,KAAD,QAAEA,GAAWF,GAAQ,CAAAY,EAAAhC,KAAA,SACjB,OAAtBjB,EAAauC,GAASU,EAAAhC,KAAA,GAEHmB,EAAIyB,QAAQtB,GAAS,KAAD,GAYM,OAZvCC,EAAIS,EAAA7B,KACJqB,EAAWD,EAAKsB,YAAY,CAAEC,MAAO,MACrCrB,EAASsB,SAASC,cAAc,UAChCtB,EAAUD,EAAOwB,WAAW,MAClCxB,EAAOyB,MAAQ1B,EAAS0B,MACxBzB,EAAO0B,OAAS3B,EAAS2B,OAEnBxB,EAAgB,CACpByB,cAAe1B,EACfF,SAAUA,GAGNI,EAAaL,EAAK8B,OAAO1B,GAAcK,EAAAhC,KAAA,GACvC4B,EAAWc,QAAQ,KAAD,GAElBb,EAAYH,EAAQ4B,aAAa,EAAG,EAAG7B,EAAOyB,MAAOzB,EAAO0B,SAG5DrB,EAAM,IAAIyB,IAAGC,IAAI/B,EAAO0B,OAAQ1B,EAAOyB,MAAOK,IAAGE,UACnDC,KAAKC,IAAI9B,EAAU6B,MACnB3B,EAAM6B,EAAa9B,GAOvBT,EAAcwC,KAAK9B,GAAK,QA9BiBT,IAASU,EAAAhC,KAAA,iBAiCpD1B,EAAUuF,KAAKxC,GAAe,QA1CaJ,IAAQe,EAAAhC,KAAA,gBA4CrDb,EAAa,GACbZ,EAAaD,GACb2D,QAAQC,IAAI5D,GAKZ2D,QAAQC,IAAI,oBAAmB,yBAAAF,EAAA5B,OAAA,GAAAW,EAAA,KAChCD,EAAAR,MAAA,KAAAC,UAAA,CA6HH,SAASuD,EAAaC,GAMlB,IALA,IAAIC,GAAU,IACVC,GAAU,EACVC,EAAS,IACTC,GAAU,EAELC,EAAI,EAAGA,EAAIL,EAAIM,QAAQ9B,OAAQ6B,GAAK,EAAG,CAC5C,IAAIE,EAAOP,EAAIM,QAAQD,GACnBE,EAAOJ,IACPA,EAASI,EACTH,EAASC,GAETE,EAAON,IACPA,EAASM,EACTL,EAASG,EAEjB,CAEA,MAAO,CAACD,EAAQF,EACpB,CAEA,SAASL,EAAaW,GAElB,IAAIC,EAAO,IAAIjB,IAAGC,IAClBD,IAAGkB,SAASF,EAAKC,EAAMjB,IAAGmB,gBAAiB,GAG3C,IAAIC,EAAU,IAAIpB,IAAGC,IACjBoB,EAAQ,IAAIrB,IAAGsB,KAAK,EAAG,GAC3BtB,IAAGuB,aAAaN,EAAMG,EAASC,EAAO,EAAG,EAAGrB,IAAGwB,gBAG/C,IAAIC,EAAS,IAAIzB,IAAGC,IACpBD,IAAG0B,kBAAkBN,EAASK,EAAQ,IAAKzB,IAAG2B,2BAA4B3B,IAAG4B,kBAAmB,GAAI,GAEpG,IAAIC,EAAM7B,IAAGC,IAAI6B,MAAMd,EAAIe,KAAMf,EAAIgB,KAAMhC,IAAGiC,SAC1CC,EAAQ,IAAIlC,IAAGC,IACfkC,EAAQ,IAAInC,IAAGoC,OAAO,IAAK,EAAG,GAElCpC,IAAGqC,YAAYZ,EAAQS,EAAO,EAAGI,KAAKC,GAAK,IAAK,EAAG,GAAI,GAEvD,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAMH,OAAQS,EAAG,CACjC,IAAIC,EAAa,IAAIzC,IAAG0C,MAAMR,EAAMpB,QAAY,EAAJ0B,GAAQN,EAAMpB,QAAY,EAAJ0B,EAAQ,IACtEG,EAAW,IAAI3C,IAAG0C,MAAMR,EAAMpB,QAAY,EAAJ0B,EAAQ,GAAIN,EAAMpB,QAAY,EAAJ0B,EAAQ,IAC5ExC,IAAG4C,KAAKf,EAAKY,EAAYE,EAAUR,EACvC,CAKA,IAAIU,EAAY,IAAI7C,IAAGC,IAGnB6C,EAAoB9C,IAAG+C,sBAAsB/C,IAAGgD,WAAY,IAAIhD,IAAGsB,KAAK,GAAI,IAC5E2B,EAAsB,IAAIjD,IAAGC,IACjCD,IAAGkD,aAAazB,EAAQwB,EAAqBjD,IAAGmD,WAAYL,EAAmB,IAAI9C,IAAG0C,OAAO,GAAI,GAAI,GAErG,IAAIU,EAAsB,IAAIpD,IAAGqD,UACjCrD,IAAGsD,aAAaL,EAAqBG,EAAqBP,EAAW7C,IAAGuD,cAAevD,IAAGwD,qBAO1F,IAJA,IAAIC,GAAY,EACZC,EAAW,IACXC,GAAY,EACZC,GAAY,IACPpB,EAAI,EAAGA,EAAIY,EAAoBS,SAAUrB,EAAG,CACjD,IAKIsB,EALIV,EAAoBW,IAAIvB,GAKnB1B,QAAQ,GACjBgD,EAAO,KACHA,EAAOJ,IACPA,EAAWI,EACXL,EAAWjB,GAEXsB,EAAOF,IACPA,EAAWE,EACXH,EAAWnB,GAGvB,CAEA,IAAAwB,EAA+BzD,EAAa6C,EAAoBW,IAAIJ,IAAUM,EAAA/J,YAAA8J,EAAA,GAAvEE,EAASD,EAAA,GAAEE,EAASF,EAAA,GAC3BG,EAA+B7D,EAAa6C,EAAoBW,IAAIN,IAAUY,EAAAnK,YAAAkK,EAAA,GAAvEE,EAASD,EAAA,GAAEE,EAASF,EAAA,GAEvBG,EAAOpB,EAAoBW,IAAIN,GAC/BgB,EAAOrB,EAAoBW,IAAIJ,GAC/Be,EAAI,CACJF,EAAK1D,QAAQwD,GAAYE,EAAK1D,QAAQwD,EAAU,GAChDE,EAAK1D,QAAQyD,GAAYC,EAAK1D,QAAQyD,EAAU,GAChDE,EAAK3D,QAAQqD,GAAYM,EAAK3D,QAAQqD,EAAU,GAChDM,EAAK3D,QAAQoD,GAAYO,EAAK3D,QAAQoD,EAAU,IAEpDlE,IAAG2E,aAAa9C,EAAKuB,GAAsB,EAAG,IAAIpD,IAAGoC,OAAO,EAAG,IAAK,EAAG,KAAM,GAG7E,IAAK,IAAII,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACxB,IAAIC,EAAa,IAAIzC,IAAG0C,MAAMgC,EAAI,EAAFlC,GAAMkC,EAAI,EAAFlC,EAAI,IACxCG,EAAW,IAAI3C,IAAG0C,MAAMgC,EAAI,EAAFlC,EAAI,GAAIkC,EAAI,EAAFlC,EAAI,IAC5CxC,IAAG4C,KAAKf,EAAKY,EAAYE,EAAU,IAAI3C,IAAGoC,OAAO,EAAE,EAAE,IAAI,KAC7D,CAEA,IAAIwC,EAAa5E,IAAG6E,aAAa,EAAG,EAAG7E,IAAG8E,SAAU,CAAC,EAAG,EAAG9D,EAAIgB,KAAM,EAAGhB,EAAIgB,KAAMhB,EAAIe,KAAM,EAAGf,EAAIe,OAC/FgD,EAAY/E,IAAG6E,aAAa,EAAG,EAAG7E,IAAG8E,SAAUJ,GAE/CM,EAAuBhF,IAAGiF,wBAAwBF,EAAWH,GAE7DM,EAAW,IAAIlF,IAAGC,IAQtB,OAPAD,IAAGmF,gBAAgBnE,EAAKkE,EAAUF,EAAsB,IAAIhF,IAAGsB,KAAKN,EAAIgB,KAAMhB,EAAIe,OAElFF,EAAIuD,SACJnE,EAAKmE,SACLhE,EAAQgE,SACR3D,EAAO2D,SAEAF,CACX,CAEAG,qBAAU,WACN7F,SAAS8F,MAAQ,oBACjBrG,IAAMsG,oBAAoBC,UAAW,sEACzC,IAEA,IAAIC,EAAWC,cAAA,QACG,IAAd/J,IACF8J,EAAWE,eAAA,KAAAC,SAAA,CAAIzK,EAAUI,EAAU,IAAEI,MAGvC,IAAIkK,EAAUH,cAAAI,WAAA,IACVC,EAAYL,cAAAI,WAAA,IACZE,EAAYN,cAAAI,WAAA,IA6DhB,OA5DyB,IAArB/K,EAAUiE,QACZ6G,EACIF,eAAA,OAAAC,SAAA,CACEF,cAAA,MAAAE,SAAI,oBACJF,cAAA,UAAQO,IAAKvM,EAAWwM,GAAG,qBAGjCF,EACEL,eAAA,OAAAC,SAAA,CACMF,cAAA,MAAAE,SAAI,gBAEJD,eAAA,QAAMQ,SAlWO,SAAChK,GACpBA,EAAMiK,iBAsFR,WAKE,GAJA1H,QAAQC,IAAI,8BAA+BpE,GAC3CmE,QAAQC,IAAI,4BAA6BhE,GACzC+D,QAAQC,IAAI5D,GAEM,KAAdR,GAAkC,KAAdI,EAAxB,CAKA,IAAI0L,EAAI,GAENA,EADgB,KAAd9L,EACEI,EAGAJ,EAGNmE,QAAQC,IAAI,MACZD,QAAQC,IAAI0H,GACZA,EAAIA,EAAEC,MAAM,MACZ5H,QAAQC,IAAI0H,GAMZ,IAJA,IAGIE,EAAU,GACL/D,EAAI,EAAGA,EAAIzH,EAAUiE,OAAQwD,IACpC9D,QAAQC,IAAI5D,GACZ2D,QAAQC,IAAI5D,EAAUyH,IACtB+D,EAAQjG,KAAK,IAAIN,IAAGC,IAAa,GAAToG,EAAErH,OAAgC,EAArBjE,EAAUyH,GAAG,GAAGR,KAAQhC,IAAGE,UAGlE,IAAK,IAAIsG,EAAI,EAAGA,EAAIH,EAAErH,OAAQwH,IAAK,CACjC,IAAIC,EAASJ,EAAEG,GAEXE,EAAe,GACfC,EAAa,GACbC,EAAa,GAQbC,EAAW,GACf,IAASrE,EAAI,EAAGA,EAAIhJ,EAAMwF,OAAQwD,IAChC,IAAK,IAAIsE,EAAI,EAAGA,EAAItN,EAAMgJ,GAAGxD,OAAQ8H,IAC/BtN,EAAMgJ,GAAGsE,KAAOL,IAClBI,EAAW,CAACrE,EAAGsE,GACL,IAANtE,IACFqE,EAAW,CAACrE,EAAGsE,EAAE,KAMzB,GADApI,QAAQC,IAAIkI,GACY,IAApBA,EAAS7H,OAAb,CAOA,IAFAN,QAAQC,IAAI8H,GACZ/H,QAAQC,IAAI5D,EAAUiE,QACbwD,EAAI,EAAGA,EAAIzH,EAAUiE,OAAQwD,IAAK,CACzC,IAAI5C,EAAS7E,EAAUyH,GAAGqE,EAAS,IAAI9E,KACnCpC,EAAQ5E,EAAUyH,GAAGqE,EAAS,IAAI7E,KAElC+E,EAAanH,EAASpG,EAAMqN,EAAS,IAAI7H,OACzB,IAAhB6H,EAAS,KACXE,EAAanH,GAAUpG,EAAMqN,EAAS,IAAI7H,OAAO,IAGnD,IAAIgI,EAAQ,IAAIhH,IAAGiH,KAAK,EAAGF,EAAWF,EAAS,GAAU,IAANlH,EAAe,IAAMoH,GACpEG,EAAQ,IAAIlH,IAAGiH,KAAY,IAAPtH,EAAa,IAAMoH,EAAWF,EAAS,GAAU,IAANlH,EAAmB,IAAMoH,GACxFI,EAAQ,IAAInH,IAAGiH,KAAY,IAAPtH,EAAa,IAAMoH,EAAWF,EAAS,GAAU,IAANlH,EAAmB,IAAMoH,GAExFK,EAAcrM,EAAUyH,GAAGqE,EAAS,IAAIQ,IAAIL,GAC5CM,EAAYvM,EAAUyH,GAAGqE,EAAS,IAAIQ,IAAIH,GAC1CK,EAAYxM,EAAUyH,GAAGqE,EAAS,IAAIQ,IAAIF,GAE9CT,EAAapG,KAAK8G,GAClBT,EAAWrG,KAAKgH,GAChBV,EAAWtG,KAAKiH,EAClB,CAGA,IAAS/E,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACd+D,EAAQ/D,GAAGR,KAEvBtD,QAAQC,IAAI,aACZD,QAAQC,IAAI4H,EAAQ/D,GAAGR,MACvBtD,QAAQC,IAAI4H,EAAQ/D,GAAGT,MAEvB,IAAIyF,EAAOjB,EAAQ/D,GAAG6E,IAAI,IAAIrH,IAAGiH,KAAK,EAAK,GAAFT,EAAME,EAAalE,GAAGR,KAAM0E,EAAalE,GAAGT,OACrF2E,EAAalE,GAAGiF,OAAOD,GAEvB,IAAIE,EAAOnB,EAAQ/D,GAAG6E,IAAI,IAAIrH,IAAGiH,KAAKP,EAAalE,GAAGR,KAAQ,GAAFwE,EAAMG,EAAWnE,GAAGR,KAAM2E,EAAWnE,GAAGT,OACpG4E,EAAWnE,GAAGiF,OAAOC,GACrB,IAAIC,EAAOpB,EAAQ/D,GAAG6E,IAAI,IAAIrH,IAAGiH,KAAKP,EAAalE,GAAGR,KAAK2E,EAAWnE,GAAGR,KAAQ,GAAFwE,EAAMI,EAAWpE,GAAGR,KAAM4E,EAAWpE,GAAGT,OACvH6E,EAAWpE,GAAGiF,OAAOE,GAErB,IAAIC,EAAOrB,EAAQ/D,GAAG6E,IAAI,IAAIrH,IAAGiH,KAAKP,EAAalE,GAAGR,KAAK2E,EAAWnE,GAAGR,KAAK4E,EAAWpE,GAAGR,KAAK,GAAM,GAAFwE,EAAMG,EAAW,GAAG3E,KAAM2E,EAAW,GAAG5E,OAC7I4E,EAAW,GAAGc,OAAOG,GACrB,IAAIC,EAAOtB,EAAQ/D,GAAG6E,IAAI,IAAIrH,IAAGiH,KAAKP,EAAalE,GAAGR,KAAK2E,EAAWnE,GAAGR,KAAK4E,EAAWpE,GAAGR,KAAK,GAAG2E,EAAW,GAAG3E,KAAQ,GAAFwE,EAAMI,EAAW,GAAG5E,KAAM4E,EAAW,GAAG7E,OAChK6E,EAAW,GAAGa,OAAOI,GAErB,IAAIC,EAAOvB,EAAQ/D,GAAG6E,IAAI,IAAIrH,IAAGiH,KAAKP,EAAalE,GAAGR,KAAK2E,EAAWnE,GAAGR,KAAK4E,EAAWpE,GAAGR,KAAK,GAAG2E,EAAW,GAAG3E,KAAK4E,EAAW,GAAG5E,KAAK,GAAM,GAAFwE,EAAMG,EAAW,GAAG3E,KAAM2E,EAAW,GAAG5E,OACtL4E,EAAW,GAAGc,OAAOK,GACrB,IAAIC,EAAOxB,EAAQ/D,GAAG6E,IAAI,IAAIrH,IAAGiH,KAAKP,EAAalE,GAAGR,KAAK2E,EAAWnE,GAAGR,KAAK4E,EAAWpE,GAAGR,KAAK,GAAG2E,EAAW,GAAG3E,KAAK4E,EAAW,GAAG5E,KAAK,GAAG2E,EAAW,GAAG3E,KAAQ,GAAFwE,EAAMI,EAAW,GAAG5E,KAAM4E,EAAW,GAAG7E,OACzM6E,EAAW,GAAGa,OAAOM,EACvB,CAnDA,MAFEnJ,MAAM,kCAAoC6H,EA0D9C,CACA,IAASjE,EAAI,EAAGA,GAAK,EAAGA,IACtBxC,IAAGgI,OAAO,eAAiBxF,EAAEpD,WAAYmH,EAAQ/D,EAAE,GA/GrD,MAFE5D,MAAM,qFAmHV,CA7MEqJ,EACF,EA8VqCrC,SAAA,CAC3BF,cAAA,YACE3D,KAAK,KACLC,KAAK,KACLkG,YAAY,oCACZC,MAAO5N,EACP6N,SApXa,SAACjM,GACxB3B,EAAS2B,EAAMO,OAAOyL,MACxB,IAoXUzC,cAAA,SACAA,cAAA,SACE2C,KAAK,OACLC,OAAO,OACPF,SAAUvM,IAEZ6J,cAAA,SACAA,cAAA,UAAQ2C,KAAK,SAAQzC,SAAC,kBAIhCG,EACEJ,eAAA,OAAAC,SAAA,CACIF,cAAA,MAAAE,SAAI,8BACJF,cAAA,OAAAE,SACIF,cAAA,SACE2C,KAAK,OACLC,OAAO,OACPF,SAAU,SAACjM,GAAK,OAAKc,EAAiBd,EAAO,OAAO,MAGxDuJ,cAAA,OAAAE,SACEF,cAAA,SACE2C,KAAK,OACLC,OAAO,OACPF,SAAU,SAACjM,GAAK,OAAKc,EAAiBd,EAAO,OAAO,MAGxDuJ,cAAA,OAAAE,SACEF,cAAA,SACE2C,KAAK,OACLC,OAAO,OACPF,SAAU,SAACjM,GAAK,OAAKc,EAAiBd,EAAO,OAAO,MAGxDuJ,cAAA,OAAAE,SACEF,cAAA,UAAQ6C,QAlYhB,WAEqB,OAAAhL,EAAAR,MAAC,KAADC,UAAA,EAgYa4I,SAAC,sBAMnCD,eAAA,OAAK6C,UAAU,cAAa5C,SAAA,CACvBC,EACAJ,EACAM,EACAC,IAGT,ECrbeyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,SAAA9M,GAAkD,IAA/C+M,EAAM/M,EAAN+M,OAAQC,EAAMhN,EAANgN,OAAQC,EAAMjN,EAANiN,OAAQC,EAAMlN,EAANkN,OAAQC,EAAOnN,EAAPmN,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJaQ,IAASC,WAAW3J,SAAS4J,eAAe,SACpDtJ,OACH4F,cAAC2D,IAAMC,WAAU,CAAA1D,SACfF,cAACjM,EAAG,OAORgP,G","file":"static/js/main.e0886140.chunk.js","sourcesContent":["const names = [\n[\n\"Abdullahi, Dararsa Moussa\", \n\"Akkawi, Zaid Kayed\", \n\"Altaweel, Abdullah Aqeel A\", \n\"An, Reuben\", \n\"Anand, Vishruth\", \n\"Andry, Marie Anyolie\", \n\"Ardhapurkar, Amogh\", \n\"Arnold, Henry Debolt\", \n\"Arnold, Xavier Charles\", \n\"Asad, Serhan\", \n\"Auh, Christian Jooahn\", \n\"Balaji, Neha Nivedita\", \n\"Barnes, William Roy\", \n\"Bhuyan, Nadimul Hasan\", \n\"Biswas, Inesh\", \n\"Bompelly, Anvith\", \n\"Bouamrani, Adam\", \n\"Bui, John Michael\", \n\"Burac, Samuel R\", \n],\n[\n\"Burgess, Bralon\", \n\"Caballero, Erick Alexander\", \n\"Chakraborty, Aishani\", \n\"Chakravarthy, Aishwarya Echur\", \n\"Chang, Angela\", \n\"Chang, Tsun-Chin\", \n\"Charugundla, Vineeth\", \n\"Chauhan, Yashkaran\", \n\"Cheah, Calvin\", \n\"Chen, Andrew G\", \n\"Chisholm, Lily Seika\", \n\"Chittineni, Anusree\", \n\"Crutcher, Kaitlyn Chapman\", \n\"Dalvi, Ria\", \n\"Damene, Talem\", \n\"De Alvaro Mena, Monica\", \n\"Desai, Sarang\", \n\"Devaraju, Shreya Homapriya\", \n\"Dhakal, Shaswat\", \n\"Dibartolo, Trinity Elaine Eloise\", \n],\n[\n\"DiBiasio, Andrew Michael Silveira\", \n\"Dineshkumar, Sanjjithsaai\", \n\"Ding, Brandon Dexon\", \n\"Douglass, Evan Dale\", \n\"Duan, Daniel Lee\", \n\"Duke, Lana\", \n\"Fain, Alison Elisabeth\", \n\"Gandhi, Devan Taal\", \n\"Garg, Keshav\", \n\"George, Rohit Koshy\", \n\"Girard, Amanda K\", \n\"Glamm, Hannah Louise\", \n\"Greer, Dillon Rowe\", \n\"Guo, Patrick\", \n\"Guru, Vibha\", \n\"Hakes, Colin Patrick\", \n\"Hill, Graham Hodges\", \n\"Holliger, Lukas John\", \n\"Honore, Michaelah\", \n\"Hou, Madeline Liu\", \n],\n[\n\"Huang, Tyler Toshio\", \n\"Huggins, Owen Scott\", \n\"Hwang, Jinseok\", \n\"Jackson, Christopher Jalen\", \n\"Jackson, Jaylon\", \n\"Jain, Manya\", \n\"Jayakumar, Girish\", \n\"Jeong, Wonsuk\", \n\"Jothish, Maria\", \n\"Kalagara, Sreehitha\", \n\"Kalemera, Elizabeth Laurent\", \n\"Kamina, Justin M\", \n\"Kang, Hoyeon\", \n\"Kang, Jenna Jiayi\", \n\"Kang, Seonghun\", \n\"Karra, Shanmukh\", \n\"Katyal, Aadi Rishi\", \n\"Kejriwal, Veer\", \n\"Kim, Alex Ju Sung\", \n\"Kim, Juseok\", \n],\n[\n\"Kim, Minjun Andrew\", \n\"Kotova, Anastasiia\", \n\"Kramer, Victor Jullian\", \n\"Kwarteng, Jocelyn Twumuaa\", \n\"Kwon, Daeyong\", \n\"Le, Jonathan Van\", \n\"Lee, Uzu\", \n\"Leng, Andrew\", \n\"Leonick, Michael James\", \n\"Li, Yuxuan\", \n\"Liang, Mathew\", \n\"Lin, Christie\", \n\"Lin, Cliff Mingzhi\", \n\"Lin, Nathan\", \n\"Liu, Songyuan\", \n\"Liu, Yunsong\", \n\"Lup, Dragos\", \n\"Maddireddy, Pranay\", \n\"Mai, Allen Tuan Quoc\", \n\"Mathur, Krish\", \n],\n[\n\"May, James Douglas\", \n\"Metlapalli, Neha Prabhakar\", \n\"Moore, Elanor Megan\", \n\"Moussa, Sami\", \n\"Nair, Ari\", \n\"Nanduri, Siddarth\", \n\"Nardomarino, Jake Thomas\", \n\"Nathan, Kashyap\", \n\"Nawal, Raima\", \n\"Nguyen, Albert K\", \n\"Nguyen, Hieu\", \n\"Nguyen, Hoangyen Anna\", \n\"Nguyen, Lan Hoang\", \n\"Ogbazghi, Sirak Teferi\", \n\"Ong, Zhenmei\", \n\"Orozco, Tessa Gretchen\", \n\"Ovadia, Gal\", \n\"Palmer, Olando Sharome II\", \n\"Panackal, Savanna A\", \n\"Park, Jisan\", \n],\n[\n\"Park, Shinyoung\", \n\"Patrick, Gray Hudson\", \n\"Phanhthourath, Phillip Stefan\", \n\"Prabhakar, Meenakshi Luckshmy\", \n\"Pu, Huanzhi\", \n\"Pujari, Sarang Raghavendra\", \n\"Ragazino, James David\", \n\"Rao, Sohum Milind\", \n\"Richard, Cade W\", \n\"Saavedra, Roland Augustus\", \n\"Samuel, Joshua Rohan\", \n\"Sanavandi, Keon\", \n\"Scarlatescu, Erik Anthony\", \n\"Seibou, Ebadallah C\", \n\"Shaikh, Haroon\", \n\"Shankar, Anushya\", \n\"Shao, Samuel Dehua\", \n\"Shelton, Jeffrey Conner\", \n\"Shi, Jonathan Yuxuan\", \n\"Shin, Shana Gah Young\", \n],\n[\n\"Simon, Jordan Alyssa\", \n\"Singh, Aayush Prakash\", \n\"Singhal, Stuti\", \n\"Siripurapu, Laltih Narayan\", \n\"Song, Lining\", \n\"Song, Mingxiao\", \n\"Spektor, Alan Peter\", \n\"Suda, Ken\", \n\"Sukendro, Samuel Sebastian\", \n\"Sun, Emily\", \n\"Tarrer, Philip Cotch\", \n\"Tatikola, Indira\", \n\"Thompson, Tarah G\", \n\"Thotakura, Keerthana\", \n\"Tillery, Lesaiah Ja'lear\", \n\"Tyagi, Aksh\", \n\"Umrani, Rushda\", \n\"Unuigboje, Omoikhosen Chizimuenu\", \n\"Vallamsetti, Prisha Yashashwini\", \n\"Vangala, Sai Nikhil Reddy\", \n],\n[\n\"Varshney, Romir\", \n\"Vatalaro, Joseph Anthony\", \n\"Venkatesh, Kavya\", \n\"Vyas, Nikhil\", \n\"Wang, Chuyu\", \n\"Wang, Xinyi\", \n\"Wen, Rose R\", \n\"Weston, Hugh Avery\", \n\"Willingham, Christian\", \n\"Xie, Feiyang\", \n\"Yamjala, Nitya Reddy\", \n\"Yang, Zhixuan\", \n\"Zeng, Bryan Mingrui\", \n\"Zhang, Benson\", \n\"Zhang, Keane\", \n\"Zheng, Jerry Lou\", \n\"Zhou, David Runzhang\", \n\"Zhuang, Qi\", \n],\n]\n\nexport default names;","import React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport cv from 'opencv.js';\n// import pdfjsLib from 'pdf.js'\n// import * as pdfjsLib from 'pdf-dist';\n// import {pdfjsLib} from 'pdfjs-dist'\n// import * as pdfjsLib from 'pdfjs-dist'\n\nimport { pdfjs } from 'react-pdf';\n\nimport names from './names.js'\n\nfunction App() {\n  const canvasRef = useRef(null);\n\n  const [pdfFiles, setPdfFiles] = useState({ pdf1: null, pdf2: null, pdf3: null });\n\n  const [textNames, setNames] = useState('');\n  const [fileNames, setFileNames] = useState('');\n\n  const [pdfImages, setPdfImages] = useState([])\n\n  const [progText, setProgText] = useState('');\n  const [progNumer, setProgNumer] = useState(0);\n  const [progDenom, setProgDenom] = useState(0);\n\n  const handleTextChange = (event) => {\n    setNames(event.target.value);\n  };\n\n  const handleNameFileChange = async (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const text = await file.text();\n      setFileNames(text);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Use the 'textNames' and 'fileNames' variables for further processing.\n    processNames();\n  };\n\n  const handleFileChange = (event, pdfNumber) => {\n    const selectedFile = event.target.files[0];\n    setPdfFiles((prevPdfFiles) => ({\n      ...prevPdfFiles,\n      [pdfNumber]: selectedFile,\n    }));\n  };\n  \n  async function loadPDFs() {\n    console.log(\"Called load pdfs\");\n\n    // You can now handle these files, e.g., load and process them using PDF.js\n    // or perform any other desired actions.\n\n    if (pdfFiles.pdf1 && pdfFiles.pdf2 && pdfFiles.pdf3) {\n    } else {\n        alert('Please select all three PDF files.');\n        return;\n    }\n\n    let pdfPaths = [\n      URL.createObjectURL(pdfFiles.pdf1),\n      URL.createObjectURL(pdfFiles.pdf2),\n      URL.createObjectURL(pdfFiles.pdf3)\n    ];\n\n    var pdfImages = [];\n    for (let pdfNum=0; pdfNum < pdfPaths.length; pdfNum++) {\n      let pdfPath = pdfPaths[pdfNum];\n      const pdf = await pdfjs.getDocument(pdfPath).promise;\n      const numPages = pdf.numPages;\n      const pdfPageImages = [];\n\n      setProgText(\"Loading PDF #\" + (pdfNum+1).toString() + \" page \")\n      setProgDenom(numPages);\n  \n      for (let pageNum = 1; pageNum <= numPages; pageNum++) {\n        setProgNumer(pageNum);\n\n        const page = await pdf.getPage(pageNum);\n        const viewport = page.getViewport({ scale: 1.5 }); // Adjust scale as needed\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        canvas.width = viewport.width;\n        canvas.height = viewport.height;\n  \n        const renderContext = {\n          canvasContext: context,\n          viewport: viewport,\n        };\n  \n        const renderTask = page.render(renderContext);\n        await renderTask.promise;\n  \n        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n        // pdfPageImages.push(imageData);\n\n        const mat = new cv.Mat(canvas.height, canvas.width, cv.CV_8UC4);\n        mat.data.set(imageData.data);\n        let res = processImage(mat);\n\n        // if (pageNum == numPages) {\n        //   console.log(\"Shwoing last page\");\n        //   cv.imshow(\"outputCanvas2\", res);\n        // }\n\n        pdfPageImages.push(res);\n      }\n  \n      pdfImages.push(pdfPageImages);\n    }\n    setProgDenom(0);\n    setPdfImages(pdfImages);\n    console.log(pdfImages);\n  \n    // Now, you have an array 'pdfImages' containing images of all pages from the three PDFs.\n    // You can use these images with OpenCV.js.\n\n    console.log(\"PDFs are loaded.\")\n  }\n\n  function processNames() {\n    console.log('Manually entered textNames:', textNames);\n    console.log('Names from uploaded file:', fileNames);\n    console.log(pdfImages)\n\n    if (textNames === '' && fileNames === '') {\n      alert(\"Please enter your students' textNames in the textbox below or by uploading a file.\");\n      return;\n    }\n\n    let n = '';\n    if (textNames === '') {\n      n = fileNames;\n    }\n    else {\n      n = textNames;\n    }\n\n    console.log(\"TF\");\n    console.log(n);\n    n = n.split('\\n')\n    console.log(n);\n\n    let threshold = 30;\n    let cr = 1;\n\n    let finalim = [];\n    for (var i = 0; i < pdfImages.length; i++) {\n      console.log(pdfImages);\n      console.log(pdfImages[i]);\n      finalim.push(new cv.Mat(n.length*63, pdfImages[i][0].cols*4, cv.CV_8UC4));\n    }\n\n    for (var k = 0; k < n.length; k++) {\n      var person = n[k];\n\n      let name_regions = [];\n      let i1_regions = [];\n      let i2_regions = [];\n\n      let i1_max = 0;\n      let i1_ind = 0;\n      let i2_max = 0;\n      let i2_ind = 0;\n\n      // find position of name in names\n      let position = []\n      for (var i = 0; i < names.length; i++) {\n        for (var j = 0; j < names[i].length; j++) {\n          if (names[i][j] === person) {\n            position = [i, j] // page, row in page\n            if (i === 0) {\n              position = [i, j+1]\n            }\n          }\n        }\n      }\n      console.log(position);\n      if (position.length === 0) {\n        alert(\"Could not find name in roster: \" + person);\n        continue;\n      }\n\n      console.log(person)\n      console.log(pdfImages.length)\n      for (var i = 0; i < pdfImages.length; i++) {\n        let height = pdfImages[i][position[0]].rows;\n        let width = pdfImages[i][position[0]].cols;\n\n        let cellHeight = height / names[position[0]].length;\n        if (position[0] === 0) {\n          cellHeight = height / (names[position[0]].length+1);\n        }\n\n        let rect1 = new cv.Rect(0, cellHeight*position[1], width*(393-3)/(917), cellHeight);\n        let rect2 = new cv.Rect(width*(393)/(917), cellHeight*position[1], width*(663 - 393)/(917), cellHeight);\n        let rect3 = new cv.Rect(width*(663)/(917), cellHeight*position[1], width*(917 - 663)/(917), cellHeight);\n\n        let name_region = pdfImages[i][position[0]].roi(rect1);\n        let i1_region = pdfImages[i][position[0]].roi(rect2);\n        let i2_region = pdfImages[i][position[0]].roi(rect3);\n\n        name_regions.push(name_region)\n        i1_regions.push(i1_region);\n        i2_regions.push(i2_region);\n      }\n\n      // Create a region of interest (ROI)\n      for (var i = 0; i < 1; i++) {\n        let width = finalim[i].cols;\n\n        console.log(\"DOING ROI\")\n        console.log(finalim[i].cols);\n        console.log(finalim[i].rows);\n\n        let roi1 = finalim[i].roi(new cv.Rect(0, k*60, name_regions[i].cols, name_regions[i].rows)); // Adjust the coordinates as needed\n        name_regions[i].copyTo(roi1);\n\n        let roi2 = finalim[i].roi(new cv.Rect(name_regions[i].cols, k*60, i1_regions[i].cols, i1_regions[i].rows)); // Adjust the coordinates as needed\n        i1_regions[i].copyTo(roi2);\n        let roi3 = finalim[i].roi(new cv.Rect(name_regions[i].cols+i1_regions[i].cols, k*60, i2_regions[i].cols, i2_regions[i].rows)); // Adjust the coordinates as needed\n        i2_regions[i].copyTo(roi3);\n\n        let roi4 = finalim[i].roi(new cv.Rect(name_regions[i].cols+i1_regions[i].cols+i2_regions[i].cols+25, k*60, i1_regions[1].cols, i1_regions[1].rows)); // Adjust the coordinates as needed\n        i1_regions[1].copyTo(roi4);\n        let roi5 = finalim[i].roi(new cv.Rect(name_regions[i].cols+i1_regions[i].cols+i2_regions[i].cols+25+i1_regions[1].cols, k*60, i2_regions[1].cols, i2_regions[1].rows)); // Adjust the coordinates as needed\n        i2_regions[1].copyTo(roi5);\n\n        let roi6 = finalim[i].roi(new cv.Rect(name_regions[i].cols+i1_regions[i].cols+i2_regions[i].cols+25+i1_regions[1].cols+i2_regions[1].cols+25, k*60, i1_regions[2].cols, i1_regions[2].rows)); // Adjust the coordinates as needed\n        i1_regions[2].copyTo(roi6);\n        let roi7 = finalim[i].roi(new cv.Rect(name_regions[i].cols+i1_regions[i].cols+i2_regions[i].cols+25+i1_regions[1].cols+i2_regions[1].cols+25+i1_regions[2].cols, k*60, i2_regions[2].cols, i2_regions[2].rows)); // Adjust the coordinates as needed\n        i2_regions[2].copyTo(roi7);\n      }\n      // cv.cvtColor(name_regions[0], name_regions[0], cv.COLOR_RGBA2BGR);\n\n      // Copy the source image to the ROI\n\n    }\n    for (var i = 1; i <= 1; i++) {\n      cv.imshow('outputCanvas' + i.toString(), finalim[i-1]);\n    }\n  }\n\nfunction processArray(arr) {\n    var maxVal = -10000;\n    var maxInd = -1;\n    var minVal = 10000;\n    var minInd = -1;\n\n    for (var x = 0; x < arr.data32S.length; x += 2) {\n        var xval = arr.data32S[x];\n        if (xval < minVal) {\n            minVal = xval;\n            minInd = x;\n        }\n        if (xval > maxVal) {\n            maxVal = xval;\n            maxInd = x;\n        }\n    }\n\n    return [minInd, maxInd]\n}\n\nfunction processImage(src) {\n    // Convert the image to grayscale\n    let gray = new cv.Mat();\n    cv.cvtColor(src, gray, cv.COLOR_RGBA2GRAY, 0);\n\n    // Apply Gaussian blur\n    let blurred = new cv.Mat();\n    let ksize = new cv.Size(5, 5);\n    cv.GaussianBlur(gray, blurred, ksize, 0, 0, cv.BORDER_DEFAULT);\n\n    // Threshold the image\n    let thresh = new cv.Mat();\n    cv.adaptiveThreshold(blurred, thresh, 255, cv.ADAPTIVE_THRESH_GAUSSIAN_C, cv.THRESH_BINARY_INV, 11, 2);\n\n    let dst = cv.Mat.zeros(src.rows, src.cols, cv.CV_8UC3);\n    let lines = new cv.Mat();\n    let color = new cv.Scalar(255, 0, 0);\n    // You can try more different parameters\n    cv.HoughLinesP(thresh, lines, 1, Math.PI / 180, 2, 10, 0);\n    // draw lines\n    for (let i = 0; i < lines.rows; ++i) {\n        let startPoint = new cv.Point(lines.data32S[i * 4], lines.data32S[i * 4 + 1]);\n        let endPoint = new cv.Point(lines.data32S[i * 4 + 2], lines.data32S[i * 4 + 3]);\n        cv.line(dst, startPoint, endPoint, color);\n    }\n\n\n    // let deskewed = new cv.Mat();\n\n    let hierarchy = new cv.Mat();\n\n    // // Detect horizontal lines\n    let horizontal_kernel = cv.getStructuringElement(cv.MORPH_RECT, new cv.Size(25, 1));\n    let detected_horizontal = new cv.Mat();\n    cv.morphologyEx(thresh, detected_horizontal, cv.MORPH_OPEN, horizontal_kernel, new cv.Point(-1, -1), 2);\n\n    let contours_horizontal = new cv.MatVector();\n    cv.findContours(detected_horizontal, contours_horizontal, hierarchy, cv.RETR_EXTERNAL, cv.CHAIN_APPROX_SIMPLE);\n\n    // console.log(\"Horizontal contours\")\n    var minIndex = -1;\n    var minValue = 10000;\n    var maxIndex = -1;\n    var maxValue = -10000;\n    for (let i = 0; i < contours_horizontal.size(); ++i) {\n        let c = contours_horizontal.get(i);\n        // for (let j = 0; j < c.data32S.length; j++) {\n        //     console.log(c.data32S[j])\n        // }\n\n        var yval = c.data32S[1];\n        if (yval > 30) {\n            if (yval < minValue) {\n                minValue = yval;\n                minIndex = i;\n            }\n            if (yval > maxValue) {\n                maxValue = yval;\n                maxIndex = i;\n            }\n        }\n    }\n\n    const [minBotInd, maxBotInd] = processArray(contours_horizontal.get(maxIndex))\n    const [minTopInd, maxTopInd] = processArray(contours_horizontal.get(minIndex))\n\n    let ctop = contours_horizontal.get(minIndex);\n    let cbot = contours_horizontal.get(maxIndex);\n    let l = [\n        ctop.data32S[minTopInd], ctop.data32S[minTopInd+1],\n        ctop.data32S[maxTopInd], ctop.data32S[maxTopInd+1],\n        cbot.data32S[maxBotInd], cbot.data32S[maxBotInd+1],\n        cbot.data32S[minBotInd], cbot.data32S[minBotInd+1]\n    ]\n    cv.drawContours(dst, contours_horizontal, -1, new cv.Scalar(0, 255, 0, 255), 3)\n\n    // draw lines\n    for (let i = 0; i < 4; ++i) {\n        let startPoint = new cv.Point(l[i*2], l[i*2+1]);\n        let endPoint = new cv.Point(l[i*2+2], l[i*2+3]);\n        cv.line(dst, startPoint, endPoint, new cv.Scalar(0,0,255,255));\n    }\n\n    let destCoords = cv.matFromArray(4, 1, cv.CV_32FC2, [0, 0, src.cols, 0, src.cols, src.rows, 0, src.rows]);\n    let srcCoords = cv.matFromArray(4, 1, cv.CV_32FC2, l);\n\n    let transformationMatrix = cv.getPerspectiveTransform(srcCoords, destCoords)\n\n    let deskewed = new cv.Mat();\n    cv.warpPerspective(src, deskewed, transformationMatrix, new cv.Size(src.cols, src.rows));\n\n    dst.delete();\n    gray.delete();\n    blurred.delete();\n    thresh.delete();\n\n    return deskewed;\n}\n\nuseEffect(() => {\n    document.title = \"Attendance Helper\";\n    pdfjs.GlobalWorkerOptions.workerSrc =\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.js\";\n});\n\nlet progElem = <p></p>\nif (progDenom !== 0) {\n  progElem = <p>{progText}{progNumer}/{progDenom}</p>\n}\n\nlet toppart = <></>\nlet pdfpicker = <></>\nlet nameinput = <></>\nif (pdfImages.length !== 0) {\n  toppart = \n      <div>\n        <h1>Combined sheet:</h1>\n        <canvas ref={canvasRef} id=\"outputCanvas1\"></canvas>\n      </div>\n\n  nameinput=\n    <div>\n          <h1>Input Names</h1>\n\n          <form onSubmit={handleSubmit}>\n            <textarea\n              rows=\"10\"\n              cols=\"40\"\n              placeholder=\"Enter student names, one per line\"\n              value={textNames}\n              onChange={handleTextChange}\n            ></textarea>\n            <br />\n            <input\n              type=\"file\"\n              accept=\".txt\"\n              onChange={handleNameFileChange}\n            />\n            <br />\n            <button type=\"submit\">Submit</button>\n          </form>\n    </div>\n} else {\n  pdfpicker =\n    <div>\n        <h1>Upload attendance sheets:</h1>\n        <div>\n            <input\n              type=\"file\"\n              accept=\".pdf\"\n              onChange={(event) => handleFileChange(event, 'pdf1')}\n            />\n          </div>\n          <div>\n            <input\n              type=\"file\"\n              accept=\".pdf\"\n              onChange={(event) => handleFileChange(event, 'pdf2')}\n            />\n          </div>\n          <div>\n            <input\n              type=\"file\"\n              accept=\".pdf\"\n              onChange={(event) => handleFileChange(event, 'pdf3')}\n            />\n          </div>\n          <div>\n            <button onClick={loadPDFs}>Process PDFs</button>\n          </div>\n    </div>\n}\n\nreturn (\n    <div className=\"mainContent\">\n        {toppart}\n        {progElem}\n        {pdfpicker}\n        {nameinput}\n    </div>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}